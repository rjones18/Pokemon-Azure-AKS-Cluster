trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.0.0'  # specify your desired Terraform version

steps:
- task: MicrosoftSecurityDevOps@1
  inputs:
    command: 'run'  # Choose from 'run', 'pre-job', 'post-job'
    # config: '.'  # Optional: Specify the path to your MSDO config file
    policy: 'azuredevops'  # Choose from 'azuredevops', 'microsoft', 'none'
    categories: 'IaC,secrets'  # Optional: Specify categories like 'secrets', 'code', etc.
    # languages: 'javascript,typescript'  # Optional: Specify languages to analyze
    tools: 'terrascan,trivy'  # Optional: Specify tools like 'bandit', 'binskim', etc.
    break: false  # Set to true if you want to fail the build on error results
    publish: true  # Set to true to publish SARIF results
    artifactName: 'CodeAnalysisLogs'  # Optional: Specify the artifact name for SARIF results

- script: |
    echo Installing Snyk CLI...
    npm install -g snyk
  displayName: 'Install Snyk CLI'

- script: |
    echo Authenticating with Snyk...
    snyk auth $(SNYK_TOKEN)
  displayName: 'Authenticate Snyk CLI'

- script: |
    echo Running Snyk IaC scan...
    snyk iac test --report || echo "Snyk found vulnerabilities!"
  displayName: 'Snyk IaC Scan'
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'terrafromiacdevops1'
    backendAzureRmResourceGroupName: 'test-grp'
    backendAzureRmStorageAccountName: 'regterraformstate201'
    backendAzureRmContainerName: 'tfstatefiles'
    backendAzureRmKey: 'az-devops-aks-terraform3.tfstate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'terrafromiacdevops1'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'terrafromiacdevops1'

- script: |
        echo "Installing Brew and Zarf CLI..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.profile
        echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.bash_profile
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.zshrc
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        source ~/.profile  # Or the appropriate file for your shell
        brew tap defenseunicorns/tap && brew install zarf
        az login --service-principal -u $(ServicePrincipalId) -p $(ServicePrincipalKey) --tenant $(TenantId)
        az aks get-credentials --resource-group test-k8s-resources --name example-aks1
        zarf init package | y
        zarf init --confirm
  displayName: 'Install Zarf CLI and Initializing Zarf'